// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/cal/calendar.proto

package calendar

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event_EventType int32

const (
	Event_OTHER    Event_EventType = 0
	Event_MEETING  Event_EventType = 1
	Event_REMINDER Event_EventType = 2
)

var Event_EventType_name = map[int32]string{
	0: "OTHER",
	1: "MEETING",
	2: "REMINDER",
}

var Event_EventType_value = map[string]int32{
	"OTHER":    0,
	"MEETING":  1,
	"REMINDER": 2,
}

func (x Event_EventType) String() string {
	return proto.EnumName(Event_EventType_name, int32(x))
}

func (Event_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9cfb9f90af28a33b, []int{0, 0}
}

type Event struct {
	Name                 string               `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	StopTime             *timestamp.Timestamp `protobuf:"bytes,3,opt,name=StopTime,proto3" json:"StopTime,omitempty"`
	Type                 Event_EventType      `protobuf:"varint,4,opt,name=Type,proto3,enum=calendar.Event_EventType" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cfb9f90af28a33b, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Event) GetStopTime() *timestamp.Timestamp {
	if m != nil {
		return m.StopTime
	}
	return nil
}

func (m *Event) GetType() Event_EventType {
	if m != nil {
		return m.Type
	}
	return Event_OTHER
}

type Calendar struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=Events,proto3" json:"Events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Calendar) Reset()         { *m = Calendar{} }
func (m *Calendar) String() string { return proto.CompactTextString(m) }
func (*Calendar) ProtoMessage()    {}
func (*Calendar) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cfb9f90af28a33b, []int{1}
}

func (m *Calendar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Calendar.Unmarshal(m, b)
}
func (m *Calendar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Calendar.Marshal(b, m, deterministic)
}
func (m *Calendar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Calendar.Merge(m, src)
}
func (m *Calendar) XXX_Size() int {
	return xxx_messageInfo_Calendar.Size(m)
}
func (m *Calendar) XXX_DiscardUnknown() {
	xxx_messageInfo_Calendar.DiscardUnknown(m)
}

var xxx_messageInfo_Calendar proto.InternalMessageInfo

func (m *Calendar) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterEnum("calendar.Event_EventType", Event_EventType_name, Event_EventType_value)
	proto.RegisterType((*Event)(nil), "calendar.Event")
	proto.RegisterType((*Calendar)(nil), "calendar.Calendar")
}

func init() { proto.RegisterFile("pkg/cal/calendar.proto", fileDescriptor_9cfb9f90af28a33b) }

var fileDescriptor_9cfb9f90af28a33b = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0xc8, 0x4e, 0xd7,
	0x4f, 0x4e, 0xcc, 0x01, 0xe1, 0xd4, 0xbc, 0x94, 0xc4, 0x22, 0xbd, 0x82, 0xa2, 0xfc, 0x92, 0x7c,
	0x21, 0x0e, 0x18, 0x5f, 0x4a, 0x3e, 0x3d, 0x3f, 0x3f, 0x3d, 0x27, 0x55, 0x1f, 0x2c, 0x9e, 0x54,
	0x9a, 0xa6, 0x5f, 0x92, 0x99, 0x9b, 0x5a, 0x5c, 0x92, 0x98, 0x5b, 0x00, 0x51, 0xaa, 0xf4, 0x9e,
	0x91, 0x8b, 0xd5, 0xb5, 0x2c, 0x35, 0xaf, 0x44, 0x48, 0x88, 0x8b, 0xc5, 0x2f, 0x31, 0x37, 0x55,
	0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xcc, 0x16, 0xb2, 0xe0, 0xe2, 0x0c, 0x2e, 0x49, 0x2c,
	0x2a, 0x09, 0xc9, 0xcc, 0x4d, 0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x36, 0x92, 0xd2, 0x83, 0x18,
	0xa9, 0x07, 0x33, 0x52, 0x2f, 0x04, 0x66, 0x64, 0x10, 0x42, 0xb1, 0x90, 0x19, 0x17, 0x47, 0x70,
	0x49, 0x7e, 0x01, 0x58, 0x23, 0x33, 0x41, 0x8d, 0x70, 0xb5, 0x42, 0xba, 0x5c, 0x2c, 0x21, 0x95,
	0x05, 0xa9, 0x12, 0x2c, 0x0a, 0x8c, 0x1a, 0x7c, 0x46, 0x92, 0x7a, 0x70, 0x9f, 0x81, 0x1d, 0x09,
	0x21, 0x41, 0x0a, 0x82, 0xc0, 0xca, 0x94, 0x0c, 0xb9, 0x38, 0xe1, 0x42, 0x42, 0x9c, 0x5c, 0xac,
	0xfe, 0x21, 0x1e, 0xae, 0x41, 0x02, 0x0c, 0x42, 0xdc, 0x5c, 0xec, 0xbe, 0xae, 0xae, 0x21, 0x9e,
	0x7e, 0xee, 0x02, 0x8c, 0x42, 0x3c, 0x5c, 0x1c, 0x41, 0xae, 0xbe, 0x9e, 0x7e, 0x2e, 0xae, 0x41,
	0x02, 0x4c, 0x4a, 0xc6, 0x5c, 0x1c, 0xce, 0x50, 0x43, 0x85, 0xd4, 0xb9, 0xd8, 0xc0, 0xda, 0x8b,
	0x25, 0x18, 0x15, 0x98, 0x35, 0xb8, 0x8d, 0xf8, 0xd1, 0xec, 0x0b, 0x82, 0x4a, 0x27, 0xb1, 0x81,
	0x1d, 0x6d, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xea, 0x08, 0x45, 0x07, 0x72, 0x01, 0x00, 0x00,
}
